{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","name","TodoInfo","todo","title","TodoList","todos","map","id","classNames","completed","username","email","preparedTodos","userId","usersFromServer","find","App","useState","setTitle","userName","setUserName","setTodos","erorTitle","setErorTitle","erorUser","setErorUser","action","method","onSubmit","event","preventDefault","length","Number","addTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79c53f1f.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../react-app-env';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href=\"mailto:Julianne.OConner@kory.org\">\n    {user?.name}\n  </a>\n);\n","import React from 'react';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../react-app-env';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <>\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n    <UserInfo user={todo.user} />\n  </>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../react-app-env';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <>\n    {todos.map(todo => (\n      <article\n        key={todo.id}\n        data-id={todo.id}\n        className={classNames(\n          'TodoInfo',\n          { 'TodoInfo--completed': todo.completed },\n        )}\n      >\n        <TodoInfo todo={todo} />\n      </article>\n    ))}\n  </>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst preparedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => user.id === todo.userId) || null,\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userName, setUserName] = useState('');\n  const [todos, setTodos] = useState(preparedTodos);\n  const [erorTitle, setErorTitle] = useState(false);\n  const [erorUser, setErorUser] = useState(false);\n  const addTodo = () => {\n    if (title !== '' && userName !== '') {\n      setTodos([...todos, {\n        id: todos.length + 1,\n        title,\n        completed: false,\n        userId: Number(\n          usersFromServer.find(user => user.name === userName)?.id,\n        ),\n        user: usersFromServer.find(\n          user => user.name === userName,\n        ) || null,\n      }]);\n      setTitle('');\n      setUserName('');\n    }\n\n    if (title === '') {\n      setErorTitle(true);\n    }\n\n    if (userName === '') {\n      setErorUser(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          addTodo();\n        }}\n      >\n        <div className=\"field\">\n          Title:\n          {' '}\n          <input\n            name=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setErorTitle(false);\n              setTitle(event.target.value);\n            }}\n          />\n          {erorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          User:\n          {' '}\n          <select\n            name=\"user\"\n            data-cy=\"userSelect\"\n            value={userName}\n            onChange={(event => {\n              setErorUser(false);\n              setUserName(event.target.value);\n            })}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.name}>{user.name}</option>\n            ))}\n          </select>\n\n          {erorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}